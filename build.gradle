plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'net.neoforged.moddev' version '2.0.95'
}

group = mod_group_id
version = mod_version
archivesBaseName = "kaleidoscopecookery"

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version
    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }
    runs {
        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
            gameDirectory = project.file('run/client')
        }
        client2 {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
            programArguments = [
                    "--username", "tartaric_acid"
            ]
            gameDirectory = project.file('run/client2')
        }
        server {
            server()
            //programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
            gameDirectory = project.file('run/server')
        }
        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all',
                    '--output', file('src/generated/resources/').getAbsolutePath(),
                    '--existing', file('src/main/resources/').getAbsolutePath()
        }
        configureEach {
            jvmArguments = [
                    "-XX:+IgnoreUnrecognizedVMOptions",
                    "-XX:+AllowEnhancedClassRedefinition"
            ]
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }
    }
    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    exclude '.cache/**'
}

repositories {
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
        content {
            includeGroup "mezz.jei"
        }
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
        content {
            includeGroup "mezz.jei"
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.latvian.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.latvian.apps"
        }
    }
    maven {
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        url 'https://jitpack.io'
        content {
            includeGroup "com.github.rtyley"
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
}

dependencies {
    // JEI
    compileOnly("mezz.jei:jei-1.21.1-neoforge-api:19.22.1.316")
    runtimeOnly("mezz.jei:jei-1.21.1-neoforge:19.22.1.316")

    // EMI
    compileOnly "dev.emi:emi-neoforge:1.1.22+1.21.1:api"
    implementation "dev.emi:emi-neoforge:1.1.22+1.21.1"

    // REI
    compileOnly "maven.modrinth:cloth-config:15.0.140+neoforge"
    compileOnly "maven.modrinth:architectury-api:13.0.8+neoforge"
    compileOnly "maven.modrinth:rei:16.0.788+neoforge"

    implementation "maven.modrinth:jade:15.0.5+neoforge"

    // KubeJS
    implementation "dev.latvian.mods:rhino:2101.2.7-build.77"
    implementation "dev.latvian.mods:kubejs-neoforge:2101.7.2-build.265"
    runtimeOnly "com.github.rtyley:animated-gif-lib-for-java:animated-gif-lib-1.7"
    //runtimeOnly "curse.maven:probejs-585406:5820894"

    // 背包
    runtimeOnly "maven.modrinth:sophisticated-core:1.21.1-1.3.50.1004"
    runtimeOnly "maven.modrinth:sophisticated-backpacks:1.21.1-3.24.15.1250"

    // Farmer's Delight
    implementation "maven.modrinth:farmers-delight:1.21.1-1.2.8-neoforge"

    implementation "maven.modrinth:harvest-with-ease:9.4.0-neoforge,1.21.1"
    runtimeOnly "maven.modrinth:cobweb:1.3.3-neoforge,1.21.1"

    // runtimeOnly "maven.modrinth:diet:2.1.1+1.20.1-forge"
    runtimeOnly 'curse.maven:touhou-little-maid-355044:6613831-sources-6613865'
    runtimeOnly "maven.modrinth:appleskin:3.0.7+mc1.21-neoforge"
    runtimeOnly "maven.modrinth:just-enough-effect-descriptions-jeed:1.21-2.2.19-neoforge"
    runtimeOnly "maven.modrinth:carry-on:2.2.2-neoforge"
    // runtimeOnly "curse.maven:ecliptic-seasons-1118306:7041469"

    runtimeOnly "maven.modrinth:nbtedit-reborn:5.2.11+mc1.21.1-neoforge"
    runtimeOnly "maven.modrinth:kiwi:15.6.1+neoforge"
    runtimeOnly "maven.modrinth:food-effect-tooltips-forge:1.4.0-neoforge,1.21.1"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Implementation-Title"  : project.name,
                "Implementation-Version": "${version}"
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

java {
    // 编译源码文件，方便发布 maven
    withSourcesJar()
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
